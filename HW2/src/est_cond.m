function c = est_cond(A)  validateattributes(A, {"numeric"}, {'square'});    % condition number would be: c = norm(A) * norm(inv(A));  % we want to estimate it, since its calculation is so expensive    % a Matrix with a determinant of 0 will always have a condition number of Infinity  % Calculating the inverse needs to divide by determinant --> if it is zero, the division is invalid.  % doc says not to use det for checking singularity    % first compute norm of A  norm_A = norm(A,1);    % then do a decomposition of A  [L,U]= lu(A);    % get scalar for U' * w = e  ##  [w,e] = get_estimation_vector(U');  [w] = solve_Utwe(U);    % solve a linear equation L' * y = w to get vector y  y = L' \ w;    % solve a linear equation L * v = y to get vector v  v = L \ y;    %solve a linear equation U * z = v to get vector z  z = U \ v;  % estimate condition number  c = (norm(y,1) /( norm_A * norm(z,1))) ^-1 ;    
endfunction
