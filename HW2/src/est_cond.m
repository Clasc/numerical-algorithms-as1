function c = est_cond(A)  validateattributes(A, {"numeric"}, {'square'});    % condition number would be: c = norm(A) * norm(inv(A));  % we want to estimate it, since its calculation is so expensive    % a Matrix with a determinant of 0 will always have a condition number of Infinity  % Calculating the inverse needs to divide by determinant --> if it is zero, the division is invalid.  % doc says not to use det for checking singularity    % first compute norm of A  norm_A = norm(A);    % then do a decomposition of A  [L,U]= lu(A);      % get scalar e = U' * w   e = get_estimation_vector(A);  % A = U_svd * S * V'  % solve a linear equation L' * y = w to get vector y    % solve a linear equation L * v = y to get vector v    % solve a linear equation U * z = v to get vector z    % estimate condition number  % c = norm(y) /( norm_A * norm(z));  
endfunction
