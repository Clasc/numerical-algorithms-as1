n_s = 5:5:100;iterations = length(n_s);R = zeros(iterations, 1);RrL = R;RrU = R;RL = R;RU = R;for i = 1:iterations  B = rand(n);  n = length(b)    [L,U] = get_lu(B);  x = ones(n,1);    bl = L * x;  bu = U * x;    _x1 = solveL(L, bl, n);  _x2 = solveU(U, bu, n);      RrL(i) = relative_residual(L,_x1,bl);  RrU(i) = relative_residual(U,_x2,bu);    RL(i) = accuracy(_x1,x);  RU(i) = accuracy(_x2,x);endforfiguresemilogy(n_s, RL, n_s, RU);title("Forward error");xlabel("matrix size n");ylabel("Forware error f");grid("on");legend('Forward error L',"forward error U",'Location','northwest');figuresemilogy(n_s, RrL, n_s, RrU);title("Relative residual");xlabel("matrix size n");ylabel("Relative residual r");grid("on");legend('Relative residual of L',"Relative residual of U",'Location','northwest');